generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id          String     @id @default(cuid())
    username    String     @unique
    email       String     @unique
    password    String     
    avatar      String?
    isOnline    Boolean    @default(false)
    createdAt   DateTime   @default(now())
    updatedAt   DateTime   @updatedAt

    // Relations
    createdRooms Room[] @relation("RoomCreator")
    roomMembers  RoomMember[]
    messages     Message[]

    @@map("users")
}

model Room {
    id          String     @id @default(cuid())
    name        String
    description String?
    isActive    Boolean    @default(true)
    maxMembers  Int        @default(10)
    createdAt   DateTime   @default(now())
    updatedAt   DateTime   @updatedAt

    // Relations
    creatorId   String
    creator     User       @relation("RoomCreator", fields: [creatorId], references: [id])
    members     RoomMember[]
    messages    Message[]

    @@map("rooms")
}

model RoomMember {
    id          String     @id @default(cuid())
    userId      String
    roomId      String
    joinedAt    DateTime   @default(now())

    // Relations
    user        User        @relation(fields: [userId], references: [id])
    room        Room        @relation(fields: [roomId], references: [id])

    @@unique([userId, roomId])
    @@map("room_members")
}

model Message {
    id          String          @id @default(cuid())
    content     String
    type        MessageType     @default(TEXT)
    createdAt   DateTime        @default(now())

    // Relations
    userId      String
    user        User        @relation(fields: [userId], references: [id])
    roomId      String
    room        Room        @relation(fields: [roomId], references: [id])

    @@map("messages")
}

enum MessageType {
    TEXT
    IMAGE
    FILE
    SYSTEM
}